{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_subtitle = _resolveComponent(\"v-card-subtitle\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_subtitle = _resolveComponent(\"v-list-item-subtitle\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_ctx.person ? (_openBlock(), _createBlock(_component_v_card, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.person.name), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_subtitle, null, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.person.cpf), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_list, null, {\n          default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n            default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                default: _withCtx(() => [_createTextVNode(\"Email\")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_list_item_subtitle, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.person.email), 1 /* TEXT */)]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_list_item, null, {\n            default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                default: _withCtx(() => [_createTextVNode(\"Telefone\")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_list_item_subtitle, null, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.person.phone), 1 /* TEXT */)]),\n                _: 1 /* STABLE */\n              })]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.person.addresses, address => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: address.id\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_content, null, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.capitalize(address.type)), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_subtitle, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($options.formatAddress(address)), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_v_alert, {\n      key: 1,\n      type: \"error\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Detalhes da pessoa não estão disponíveis.\")]),\n      _: 1 /* STABLE */\n    }))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_ctx","person","_component_v_card","key","_createVNode","_component_v_card_title","_createTextVNode","_toDisplayString","name","_","_component_v_card_subtitle","cpf","_component_v_card_text","_component_v_list","_component_v_list_item","_component_v_list_item_content","_component_v_list_item_title","_component_v_list_item_subtitle","email","phone","_createElementBlock","_Fragment","_renderList","addresses","address","id","capitalize","type","$options","formatAddress","_component_v_alert"],"sources":["C:\\Users\\Davi\\PRODEMGE1\\frontend\\src\\components\\SearchPage.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-card v-if=\"person\">\r\n      <v-card-title>{{ person.name }}</v-card-title>\r\n      <v-card-subtitle>{{ person.cpf }}</v-card-subtitle>\r\n      <v-card-text>\r\n        <v-list>\r\n          <v-list-item>\r\n            <v-list-item-content>\r\n              <v-list-item-title>Email</v-list-item-title>\r\n              <v-list-item-subtitle>{{ person.email }}</v-list-item-subtitle>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n          <v-list-item>\r\n            <v-list-item-content>\r\n              <v-list-item-title>Telefone</v-list-item-title>\r\n              <v-list-item-subtitle>{{ person.phone }}</v-list-item-subtitle>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n          <v-list-item v-for=\"address in person.addresses\" :key=\"address.id\">\r\n            <v-list-item-content>\r\n              <v-list-item-title>{{ capitalize(address.type) }}</v-list-item-title>\r\n              <v-list-item-subtitle>{{ formatAddress(address) }}</v-list-item-subtitle>\r\n            </v-list-item-content>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-card-text>\r\n    </v-card>\r\n    <v-alert v-else type=\"error\">Detalhes da pessoa não estão disponíveis.</v-alert>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      search: {\r\n        cpf: '',\r\n        name: '',\r\n        phone: ''\r\n      },\r\n      records: [],\r\n      errorMessage: '',\r\n      headers: [\r\n        { text: 'CPF', value: 'cpf' },\r\n        { text: 'Nome', value: 'name' },\r\n        { text: 'Telefone', value: 'phone' },\r\n        { text: 'Endereço Residencial', value: 'residential_address' },\r\n        { text: 'Endereço Comercial', value: 'commercial_address' },\r\n        { text: 'Ações', value: 'actions', sortable: false },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchResults() {\r\n      axios.get('/registrations', { params: this.search })\r\n        .then(response => {\r\n          this.records = response.data.data;\r\n          this.errorMessage = '';\r\n        })\r\n        .catch(error => {\r\n          this.errorMessage = 'Erro ao buscar registros: ' + (error.response ? error.response.data.message : error.message);\r\n        });\r\n    },\r\n    formatAddress(addresses, type) {\r\n      const address = addresses.find(addr => addr.type === type);\r\n      return address ? `${address.street}, ${address.number}${address.complement ? ', ' + address.complement : ''} - ${address.neighborhood}, ${address.city} - ${address.state}` : 'N/A';\r\n    },\r\n    openDetails(item) {\r\n      this.$router.push({ name: 'DetailPage', params: { id: item.id } });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchResults(); // Carregar registros ao montar o componente\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Estilos adicionais, se necessário */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}