{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport vuetify from './plugins/vuetify';\nimport VueTheMask from 'vue-the-mask';\nimport axios from 'axios';\n\n// Configurações do Axios\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\naxios.defaults.withCredentials = true;\n\n// Criar a aplicação Vue\nconst app = createApp(App);\n\n// Função para obter o CSRF token\nasync function getCsrfToken() {\n  try {\n    await axios.get('/csrf-cookie');\n    console.log('CSRF token has been set.');\n  } catch (error) {\n    console.error('Failed to set CSRF token:', error);\n  }\n}\n\n// Registrar plugins\napp.use(router);\napp.use(vuetify);\napp.use(VueTheMask);\n\n// Montar a aplicação depois de obter o CSRF token\ngetCsrfToken().then(() => {\n  app.mount('#app');\n});","map":{"version":3,"names":["createApp","App","router","vuetify","VueTheMask","axios","defaults","headers","common","baseURL","withCredentials","app","getCsrfToken","get","console","log","error","use","then","mount"],"sources":["C:/Users/Davi/PRODEMGE1/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport vuetify from './plugins/vuetify';\r\nimport VueTheMask from 'vue-the-mask';\r\nimport axios from 'axios';\r\n\r\n// Configurações do Axios\r\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\r\naxios.defaults.withCredentials = true;\r\n\r\n// Criar a aplicação Vue\r\nconst app = createApp(App);\r\n\r\n// Função para obter o CSRF token\r\nasync function getCsrfToken() {\r\n    try {\r\n        await axios.get('/csrf-cookie');\r\n        console.log('CSRF token has been set.');\r\n    } catch (error) {\r\n        console.error('Failed to set CSRF token:', error);\r\n    }\r\n}\r\n\r\n// Registrar plugins\r\napp.use(router);\r\napp.use(vuetify);\r\napp.use(VueTheMask);\r\n\r\n// Montar a aplicação depois de obter o CSRF token\r\ngetCsrfToken().then(() => {\r\n    app.mount('#app');\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,kBAAkB,CAAC,GAAG,gBAAgB;AACpEH,KAAK,CAACC,QAAQ,CAACG,OAAO,GAAG,uBAAuB;AAChDJ,KAAK,CAACC,QAAQ,CAACI,eAAe,GAAG,IAAI;;AAErC;AACA,MAAMC,GAAG,GAAGX,SAAS,CAACC,GAAG,CAAC;;AAE1B;AACA,eAAeW,YAAYA,CAAA,EAAG;EAC1B,IAAI;IACA,MAAMP,KAAK,CAACQ,GAAG,CAAC,cAAc,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACJ;;AAEA;AACAL,GAAG,CAACM,GAAG,CAACf,MAAM,CAAC;AACfS,GAAG,CAACM,GAAG,CAACd,OAAO,CAAC;AAChBQ,GAAG,CAACM,GAAG,CAACb,UAAU,CAAC;;AAEnB;AACAQ,YAAY,CAAC,CAAC,CAACM,IAAI,CAAC,MAAM;EACtBP,GAAG,CAACQ,KAAK,CAAC,MAAM,CAAC;AACrB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}