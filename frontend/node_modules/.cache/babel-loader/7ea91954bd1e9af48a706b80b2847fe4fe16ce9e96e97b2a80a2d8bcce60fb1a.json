{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.testConnection && $options.testConnection(...args))\n  }, \"Test Backend Connection\"), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onClick","_cache","args","$options","testConnection","$data","message","_hoisted_1","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\Davi\\PRODEMGE1\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"testConnection\">Test Backend Connection</button>\n    <p v-if=\"message\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nimport http from '../http';\n\nexport default {\n  data() {\n    return {\n      message: ''\n    };\n  },\n  methods: {\n    testConnection() {\n      http.get('/test')\n        .then(response => {\n          this.message = response.data.message;\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    }\n  }\n}\n</script>\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAGM,cAFJC,mBAAA,CAAgE;IAAvDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,yBAAuB,GAC9CG,KAAA,CAAAC,OAAO,I,cAAhBR,mBAAA,CAAmC,KAHvCS,UAAA,EAAAC,gBAAA,CAGyBH,KAAA,CAAAC,OAAO,oBAHhCG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}